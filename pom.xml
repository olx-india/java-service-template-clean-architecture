<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.4</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.example</groupId>
    <artifactId>boilerplate</artifactId>
    <version>0.1.0</version>

    <name>Java Clean Code Architecture Service boilerplate Template</name>
    <description>
        Boilerplate project for Spring Boot Based on Clean Code Architecture
    </description>
    <url>https://github.com/olx-india/java-service-template-clean-architecture</url>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <properties>
        <java.version>17.0.8</java.version>
        <maven.compiler.release>17</maven.compiler.release>
        <spring-boot-version>3.1.4</spring-boot-version>
        <resilience4j.version>2.1.0</resilience4j.version>
        <spring-data-redis-version>2.7.2</spring-data-redis-version>
        <junit-jupiter.version>5.9.2</junit-jupiter.version>
        <newrelic.version>8.9.1</newrelic.version>
        <maven.surefire.plugin.version>2.22.1</maven.surefire.plugin.version>
        <maven.spotbugs.plugin.version>3.1.9</maven.spotbugs.plugin.version>
        <owasp.maven.version>6.5.3</owasp.maven.version>
        <common-logger.version>1.1.3</common-logger.version>
        <jacoco.version>0.8.12</jacoco.version>
        <springdoc-openapi.version>1.6.15</springdoc-openapi.version>
        <logstash-logback-encoder.version>7.3</logstash-logback-encoder.version>
        <lombok.version>1.18.30</lombok.version>
        <httpclient.version>4.5.14</httpclient.version>
        <mysql.version>8.0.33</mysql.version>
        <flyway.version>7.14.0</flyway.version>
        <retorfit.version>2.9.0</retorfit.version>
        <beanutils.version>1.9.4</beanutils.version>
        <postgres.version>42.5.0</postgres.version>
        <asm.version>6.1.1</asm.version>
        <gson.version>2.10.1</gson.version>
        <guava.version>31.1-jre</guava.version>
        <maven.dependency.plugin.version>3.1.1</maven.dependency.plugin.version>
        <mebigfatguy.fb-contrib.version>7.4.2.sb</mebigfatguy.fb-contrib.version>
        <jacoco.it.bundle.percentage.instruction>0.0</jacoco.it.bundle.percentage.instruction>
        <jacoco.ut.bundle.percentage.instruction>0.0</jacoco.ut.bundle.percentage.instruction>
        <formatterConfigPath>formatter.xml</formatterConfigPath>
        <formatterGoal>validate</formatterGoal>
        <skipUnitTests>false</skipUnitTests>
        <skipIntegration>false</skipIntegration>
        <skipVerifications>false</skipVerifications>
        <skipDependenciesCheck>false</skipDependenciesCheck>
        <dependency.check.report.dir>${project.build.directory}/dependency-check</dependency.check.report.dir>
        <jacoco.coverage.folder>${project.build.directory}/coverage-reports</jacoco.coverage.folder>
        <jacoco.unit-test.report>${jacoco.coverage.folder}/jacoco-ut.exec</jacoco.unit-test.report>
        <jacoco.integration-test.report>${jacoco.coverage.folder}/jacoco-it.exec</jacoco.integration-test.report>
        <cucumber.version>6.10.3</cucumber.version>
        <restAssured.version>4.2.0</restAssured.version>
        <docker.version>1.0.0</docker.version>
        <maven.version>3.6.1</maven.version>
        <maven.compiler.source>1.17</maven.compiler.source>
        <maven.compiler.target>1.17</maven.compiler.target>
        <maven.compiler.plugin.version>3.8.0</maven.compiler.plugin.version>
        <maven.release.plugin.version>2.5.3</maven.release.plugin.version>
        <failsafe.version>3.3.2</failsafe.version>
        <jedis.version>3.9.0</jedis.version>
        <springdoc-openapi-starter-webmvc-ui.version>2.2.0</springdoc-openapi-starter-webmvc-ui.version>
        <jackson-core.version>2.16.0</jackson-core.version>
        <hibernate-validator.version>8.0.0.Final</hibernate-validator.version>
        <resilience4j-retry.version>1.1.0</resilience4j-retry.version>
        <jaxb-api.version>2.3.0</jaxb-api.version>
        <org.testcontainers-junit-jupiter.version>1.19.3</org.testcontainers-junit-jupiter.version>
        <assertx.version>0.0.3</assertx.version>
        <dropwizard-testing.version>2.1.0</dropwizard-testing.version>
        <toxiproxy-java.version>2.1.3</toxiproxy-java.version>
        <cucumber-reporting.version>5.4.0</cucumber-reporting.version>
        <extentreports-cucumber4-adapter.version>1.0.6</extentreports-cucumber4-adapter.version>
        <codehaus.groovy.version>3.0.20</codehaus.groovy.version> <!-- Ensure it's at least 3.x+ -->
        <slf4j-api.version>2.0.9</slf4j-api.version>
        <logback-classic.version>1.4.11</logback-classic.version>
        <httpclient5.version>5.2.1</httpclient5.version>
        <spring-security-core.version>6.0.2</spring-security-core.version>
        <tika-core.version>2.9.0</tika-core.version>
        <javax.servlet-api.version>4.0.1</javax.servlet-api.version>
        <spring-kafka.version>3.0.11</spring-kafka.version>
        <javax.persistence-api.version>2.2</javax.persistence-api.version>
        <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
        <spring-retry.version>2.0.4</spring-retry.version>
        <okhttp3.okhttp.version>3.14.9</okhttp3.okhttp.version>
        <spring-cloud-commons.version>4.0.4</spring-cloud-commons.version>
        <java-jwt.version>3.2.0</java-jwt.version>
        <httpmime.version>4.5.13</httpmime.version>
        <messages.version>15.0.0</messages.version>
        <android-json.version>0.0.20131108.vaadin1</android-json.version>
        <annotations.version>23.0.0</annotations.version>
        <opentelemetry-exporter-otlp.version>1.31.0</opentelemetry-exporter-otlp.version>
    </properties>

    <dependencies>

        <!-- Spring Boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot-version}</version>
        </dependency>

        <dependency>
            <groupId>dev.failsafe</groupId>
            <artifactId>failsafe</artifactId>
            <version>${failsafe.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${spring-boot-version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot-version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Redis -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-redis</artifactId>
            <version>${spring-data-redis-version}</version>
            <exclusions>
                <exclusion>
                    <groupId>io.lettuce</groupId>
                    <artifactId>lettuce-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>${jedis.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc-openapi-starter-webmvc-ui.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson-core.version}</version>
        </dependency>

        <!-- Need this for assertx -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>

        <!-- HTTP Client -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>

        <!-- Circuit Breaker -->
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-circuitbreaker</artifactId>
            <version>${resilience4j.version}</version>
        </dependency>

        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-all</artifactId>
            <version>${resilience4j.version}</version>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-metrics</artifactId>
            <version>${resilience4j.version}</version>
        </dependency>

        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-retry</artifactId>
            <version>${resilience4j-retry.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>${jaxb-api.version}</version>
        </dependency>

        <!-- Testing dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${org.testcontainers-junit-jupiter.version}</version>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>in.olx</groupId>
            <artifactId>assertx</artifactId>
            <version>${assertx.version}</version>
        </dependency>

        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>${cucumber.version}</version>
        </dependency>
        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>${cucumber.version}</version>
        </dependency>

        <dependency>
            <groupId>io.dropwizard</groupId>
            <artifactId>dropwizard-testing</artifactId>
            <version>${dropwizard-testing.version}</version>
        </dependency>

        <dependency>
            <groupId>eu.rekawek.toxiproxy</groupId>
            <artifactId>toxiproxy-java</artifactId>
            <version>${toxiproxy-java.version}</version>
        </dependency>


        <dependency>
            <groupId>net.masterthought</groupId>
            <artifactId>cucumber-reporting</artifactId>
            <version>${cucumber-reporting.version}</version>
        </dependency>

        <dependency>
            <groupId>com.aventstack</groupId>
            <artifactId>extentreports-cucumber4-adapter</artifactId>
            <version>${extentreports-cucumber4-adapter.version}</version>
        </dependency>

        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${restAssured.version}</version>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured-common</artifactId>
            <version>${restAssured.version}</version>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>json-path</artifactId>
            <version>${restAssured.version}</version>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>xml-path</artifactId>
            <version>${restAssured.version}</version>
        </dependency>

        <dependency>
            <groupId>com.palantir.docker.compose</groupId>
            <artifactId>docker-compose-rule-junit4</artifactId>
            <version>${docker.version}</version>
        </dependency>

        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
            <version>${codehaus.groovy.version}</version>  <!-- Ensure it's at least 3.x+ -->
        </dependency>

        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logstash-logback-encoder.version}</version>
        </dependency>

        <!-- SLF4J API (Logging Facade) -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>

        <!-- Logback Classic (Implementation for SLF4J) -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5</artifactId>
            <version>${httpclient5.version}</version>
        </dependency>

        <!-- Swagger UI -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc-openapi.version}</version>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Database -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgres.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>${beanutils.version}</version>
        </dependency>

        <dependency>
            <groupId>com.squareup.retrofit2</groupId>
            <artifactId>retrofit</artifactId>
            <version>${retorfit.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring-security-core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>${tika-core.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet-api.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- kakfa -->
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
            <version>${spring-kafka.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <version>${javax.persistence-api.version}</version>
        </dependency>

        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
            <version>${javax.annotation-api.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
            <version>${spring-retry.version}</version>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>${okhttp3.okhttp.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-commons</artifactId>
            <version>${spring-cloud-commons.version}</version>
        </dependency>

        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>java-jwt</artifactId>
            <version>${java-jwt.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>${httpmime.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <dependency>
            <groupId>io.cucumber</groupId>
            <artifactId>messages</artifactId>
            <version>${messages.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.vaadin.external.google</groupId>
            <artifactId>android-json</artifactId>
            <version>0.0.20131108.vaadin1</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>${annotations.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-exporter-otlp</artifactId>
            <version>${opentelemetry-exporter-otlp.version}</version>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <skipIntegration>false</skipIntegration>
                <skipUnit>false</skipUnit>
                <skipDependencyCheck>false</skipDependencyCheck>
            </properties>
        </profile>

        <profile>
            <id>fullIntegration</id>
            <properties>
                <skipIntegration>false</skipIntegration>
                <skipUnit>true</skipUnit>
                <skipDependencyCheck>true</skipDependencyCheck>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <release>17</release>
                    <compilerArgs>
                        <arg>--add-modules</arg>
                        <arg>ALL-MODULE-PATH</arg>
                        <arg>--add-opens</arg>
                        <arg>java.base/java.lang=ALL-UNNAMED</arg>
                    </compilerArgs>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.ow2.asm</groupId>
                        <artifactId>asm</artifactId>
                        <version>${asm.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${maven.release.plugin.version}</version>
                <configuration>
                    <pushChanges>true</pushChanges>
                    <localCheckout>true</localCheckout>
                    <tagNameFormat>v@{project.version}</tagNameFormat>
                    <checkModificationExcludes>
                        <checkModificationExclude>pom.xml</checkModificationExclude>
                    </checkModificationExcludes>
                    <arguments>-DskipUnit=true -DskipIntegration=true</arguments>
                </configuration>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>perform</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.4.0</version>
                <configuration>
                    <source>17</source>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.ow2.asm</groupId>
                        <artifactId>asm</artifactId>
                        <version>${asm.version}</version> <!-- Use newer version of ASM -->
                    </dependency>
                </dependencies>
                <configuration>
                    <parallel>classes</parallel>
                    <threadCountClasses>1</threadCountClasses>
                    <forkCount>3</forkCount>
                    <reuseForks>true</reuseForks>
                    <enableAssertions>true</enableAssertions>
                    <skip>${skipUnitTests}</skip>
                    <argLine>${surefireArgLine}</argLine>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.0</version>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <argLine>${failsafeArgLine}</argLine>
                            <includes>
                                <include>**.ITMain</include>
                            </includes>
                            <skip>${skipIntegration}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${jacoco.unit-test.report}</destFile>
                            <propertyName>surefireArgLine</propertyName>
                            <skip>${skipUnitTests}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${jacoco.unit-test.report}</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                            <skip>${skipUnitTests}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${jacoco.integration-test.report}</destFile>
                            <propertyName>failsafeArgLine</propertyName>
                            <skip>${skipIntegration}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${jacoco.integration-test.report}</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                            <skip>${skipIntegration}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>check-ut</id>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.ut.bundle.percentage.instruction}</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                            <dataFile>${jacoco.coverage.folder}/jacoco-ut.exec</dataFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>check-it</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <!-- Add minimum coverage percentage required to pass -->
                                            <minimum>${jacoco.it.bundle.percentage.instruction}</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                            <dataFile>${jacoco.integration-test.report}</dataFile>
                            <skip>${skipIntegration}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>net.revelc.code.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
                <version>2.25.0</version>
                <configuration>
                    <directories>
                        <directory>${project.build.sourceDirectory}</directory>
                        <directory>${project.build.directory}/generated-sources</directory>
                    </directories>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
